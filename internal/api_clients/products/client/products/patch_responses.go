// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"eventsourcing/internal/api_clients/products/models"
)

// PatchReader is a Reader for the Patch structure.
type PatchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchOK creates a PatchOK with default headers values
func NewPatchOK() *PatchOK {
	return &PatchOK{}
}

/* PatchOK describes a response with status code 200, with default header values.

OK
*/
type PatchOK struct {
	Payload *models.PatchProduct
}

func (o *PatchOK) Error() string {
	return fmt.Sprintf("[PATCH /{id}][%d] patchOK  %+v", 200, o.Payload)
}
func (o *PatchOK) GetPayload() *models.PatchProduct {
	return o.Payload
}

func (o *PatchOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PatchProduct)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchBadRequest creates a PatchBadRequest with default headers values
func NewPatchBadRequest() *PatchBadRequest {
	return &PatchBadRequest{}
}

/* PatchBadRequest describes a response with status code 400, with default header values.

BadRequest
*/
type PatchBadRequest struct {
}

func (o *PatchBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /{id}][%d] patchBadRequest ", 400)
}

func (o *PatchBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchInternalServerError creates a PatchInternalServerError with default headers values
func NewPatchInternalServerError() *PatchInternalServerError {
	return &PatchInternalServerError{}
}

/* PatchInternalServerError describes a response with status code 500, with default header values.

InternalServerError
*/
type PatchInternalServerError struct {
}

func (o *PatchInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /{id}][%d] patchInternalServerError ", 500)
}

func (o *PatchInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
