// Code generated by go-swagger; DO NOT EDIT.

package orders

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"eventsourcing/internal/api_clients/orders/models"
)

// OrderReader is a Reader for the Order structure.
type OrderReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OrderReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewOrderOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewOrderNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewOrderInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewOrderOK creates a OrderOK with default headers values
func NewOrderOK() *OrderOK {
	return &OrderOK{}
}

/* OrderOK describes a response with status code 200, with default header values.

OK
*/
type OrderOK struct {
	Payload *models.Order
}

func (o *OrderOK) Error() string {
	return fmt.Sprintf("[GET /{id}][%d] orderOK  %+v", 200, o.Payload)
}
func (o *OrderOK) GetPayload() *models.Order {
	return o.Payload
}

func (o *OrderOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Order)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrderNotFound creates a OrderNotFound with default headers values
func NewOrderNotFound() *OrderNotFound {
	return &OrderNotFound{}
}

/* OrderNotFound describes a response with status code 404, with default header values.

NotFound
*/
type OrderNotFound struct {
}

func (o *OrderNotFound) Error() string {
	return fmt.Sprintf("[GET /{id}][%d] orderNotFound ", 404)
}

func (o *OrderNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewOrderInternalServerError creates a OrderInternalServerError with default headers values
func NewOrderInternalServerError() *OrderInternalServerError {
	return &OrderInternalServerError{}
}

/* OrderInternalServerError describes a response with status code 500, with default header values.

InternalServerError
*/
type OrderInternalServerError struct {
}

func (o *OrderInternalServerError) Error() string {
	return fmt.Sprintf("[GET /{id}][%d] orderInternalServerError ", 500)
}

func (o *OrderInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
