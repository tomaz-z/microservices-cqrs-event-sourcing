// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "API for handling products.",
    "title": "Orders",
    "version": "1.0.0"
  },
  "basePath": "/orders",
  "paths": {
    "/": {
      "post": {
        "description": "Create an order.",
        "tags": [
          "orders"
        ],
        "operationId": "Create",
        "parameters": [
          {
            "name": "order",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "500": {
            "description": "InternalServerError"
          }
        }
      }
    },
    "/{id}": {
      "get": {
        "description": "Get order by ID.",
        "tags": [
          "orders"
        ],
        "operationId": "Order",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "Order's ID.",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "404": {
            "description": "NotFound"
          },
          "500": {
            "description": "InternalServerError"
          }
        }
      }
    }
  },
  "definitions": {
    "Order": {
      "required": [
        "products"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "products": {
          "$ref": "#/definitions/ProductList"
        }
      }
    },
    "Product": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ProductList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Product"
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "API for handling products.",
    "title": "Orders",
    "version": "1.0.0"
  },
  "basePath": "/orders",
  "paths": {
    "/": {
      "post": {
        "description": "Create an order.",
        "tags": [
          "orders"
        ],
        "operationId": "Create",
        "parameters": [
          {
            "name": "order",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "500": {
            "description": "InternalServerError"
          }
        }
      }
    },
    "/{id}": {
      "get": {
        "description": "Get order by ID.",
        "tags": [
          "orders"
        ],
        "operationId": "Order",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "Order's ID.",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "404": {
            "description": "NotFound"
          },
          "500": {
            "description": "InternalServerError"
          }
        }
      }
    }
  },
  "definitions": {
    "Order": {
      "required": [
        "products"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "products": {
          "$ref": "#/definitions/ProductList"
        }
      }
    },
    "Product": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ProductList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Product"
      }
    }
  }
}`))
}
